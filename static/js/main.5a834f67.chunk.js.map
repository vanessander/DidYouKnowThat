{"version":3,"sources":["Trivia/Trivia.js","Trivia/TriviaList.js","Scroll/Scroll.js","App/ErrorBoundry.js","App/App.js","reportWebVitals.js","index.js"],"names":["Trivia","trva","React","useState","trivia","setTrivia","useEffect","fetch","then","res","json","text","catch","console","error","className","TriviaList","trivias","map","item","i","Scroll","children","style","overflowY","border","height","ErrorBoundry","props","state","hasError","this","setState","Component","App","t","length","push","Math","floor","random","triviarer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRA2BeA,EAxBA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB,EAA4BC,IAAMC,SAAS,IAA3C,mBAAOC,EAAP,KAAeC,EAAf,KAYA,OAVAH,IAAMI,WAAU,WACdC,MAAM,yBAAD,OAA0BN,EAA1B,UACFO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACJJ,EAAUI,EAAIE,SAEfC,MAAMC,QAAQC,SAEjB,CAACb,IAGD,qBAAKc,UAAU,SAAf,SACgB,KAAXX,EACC,+BAAKA,EAAL,OAEA,8CCNKY,EAZI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClB,OACI,qBAAKF,UAAU,OAAf,SACKE,EAAQC,KAAI,SAASC,EAAMC,GACxB,OACI,cAAC,EAAD,CAAsBnB,KAAMkB,GAA5B,UAAgBC,EAAhB,YCGLC,G,MARA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OACI,qBAAKP,UAAU,WAAWQ,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAA3F,SACKJ,M,4BCmBEK,E,kDAtBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,WACIC,KAAKC,SAAS,CAAEF,UAAU,M,oBAG9B,WACI,OACIC,KAAKF,MAAMC,SACP,0DAEAC,KAAKH,MAAMN,a,GAjBApB,IAAM+B,WC+BlBC,MAnBf,WACE,MAA4BhC,IAAMC,SAAS,IAA3C,mBAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAH,IAAMI,WAAU,WACdD,EAZc,WAEhB,IADA,IAAI8B,EAAI,GACY,KAAbA,EAAEC,QACPD,EAAEE,KAAKC,KAAKC,MAAM,IAAAD,KAAKE,SAAuB,IAEhD,OAAOL,EAOKM,MACT,IAGD,sBAAK1B,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAYE,QAASb,YCdhBsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5a834f67.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Trivia.css';\r\n\r\nconst Trivia = ({ trva }) => {\r\n  const [trivia, setTrivia] = React.useState('');\r\n  \r\n  React.useEffect(() => {\r\n    fetch(`http://numbersapi.com/${trva}?json`)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setTrivia(res.text);\r\n      })\r\n      .catch(console.error);\r\n\r\n  },[trva]);\r\n\r\n  return (\r\n    <div className=\"trivia\">\r\n        {trivia !== '' ? (\r\n          <h2>{trivia}!</h2>\r\n        ) : (\r\n          <p>Loading...</p>\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Trivia;","import React from 'react';\r\nimport Trivia from './Trivia';\r\n\r\nconst TriviaList = ({ trivias }) => {\r\n    return (\r\n        <div className='list'>\r\n            {trivias.map(function(item, i) {\r\n                return (\r\n                    <Trivia key={`${i}x`} trva={item} />\r\n                );\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TriviaList;","import React from \"react\";\r\nimport './Scroll.css'\r\n\r\nconst Scroll = ({ children }) => {\r\n    return (\r\n        <div className=\"scroller\" style={{ overflowY: 'scroll', border: '2px solid black', height: '500px' }}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from \"react\";\r\n\r\nclass ErrorBoundry extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false,\r\n        }\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.hasError ? (\r\n                <h1>Oooops. That is not good</h1>\r\n            ) : (\r\n                this.props.children\r\n            )\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\nimport './App.css';\nimport TriviaList from '../Trivia/TriviaList';\nimport Scroll from '../Scroll/Scroll';\nimport ErrorBoundry from './ErrorBoundry';\n\nconst triviarer = () => {\n  let t = [];\n  while (t.length !== 10) {\n    t.push(Math.floor(Math.random() * (100 - 0) + 0))\n  }\n  return t\n}\n\nfunction App() {\n  const [trivia, setTrivia] = React.useState([]);\n  \n  React.useEffect(() => {\n    setTrivia(triviarer());\n  }, [])\n\n  return (\n    <div className='App'>\n      <h1>Did You Know that</h1>\n      <Scroll>\n        <ErrorBoundry>\n          <TriviaList trivias={trivia} />\n        </ErrorBoundry>\n      </Scroll>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}